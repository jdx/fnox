#!/usr/bin/env bash
# shellcheck shell=bash
set -euxo pipefail

DRY_RUN="${DRY_RUN:-0}"

released_versions="$(git tag --list | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$')"
cur_version="$(cargo pkgid fnox | cut -d# -f2 | cut -d@ -f2)"
if ! echo "$released_versions" | grep -q "^v$cur_version$"; then
  echo "Releasing $cur_version"
  if [ "${DRY_RUN:-}" == 0 ]; then
    # Only create and push the tag - let the release workflow handle creating the release
    git tag "v$cur_version"
    git push --tags
  fi
  exit 0
fi

version="$(git cliff --bumped-version)"
changelog="$(git cliff --bump --unreleased --strip all)"

if [ "$DRY_RUN" -ne 0 ]; then
  echo "version: $version"
  echo "changelog: $changelog"
  exit 0
fi

# If there is no new version to bump (i.e., equal to current), skip creating a release PR
if [ "$version" = "v$cur_version" ]; then
  echo "No unreleased changes detected for fnox; skipping release PR creation."
  exit 0
fi

git cliff --bump -o CHANGELOG.md
cargo set-version --package fnox "${version#v}"

git config user.name mise-en-dev
git config user.email 123107610+mise-en-dev@users.noreply.github.com
cargo update

git add \
  Cargo.* \
  CHANGELOG.md

git checkout -B release
git commit -m "chore: release $version"
git push origin release --force
gh pr create --title "chore: release $version" --body "$changelog" --label "release" ||
  gh pr edit --title "chore: release $version" --body "$changelog"
