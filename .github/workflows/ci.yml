name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    tags: ["*"]
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ci-macos:
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: jdx/mise-action@v3
      - uses: Swatinem/rust-cache@v2
      - name: Install parallel on macOS
        run: brew install parallel
      - name: Install Rust components
        run: rustup component add rustfmt clippy
      - name: Build
        run: cargo build
      - name: Setup age key for fnox
        run: mkdir -p ~/.config/fnox && echo "${{ secrets.AGE_SECRET }}" > ~/.config/fnox/age.txt
      - name: Redact secrets in CI output
        run: |
          fnox ci-redact
          # shellcheck disable=SC2016
          fnox run -- sh -c 'echo MY_UNIMPORTANT_SECRET: $MY_UNIMPORTANT_SECRET'
      - name: Run tests
        run: cargo test
      - name: Check formatting
        run: mise run lint
      - name: Run clippy
        run: cargo clippy -- -D warnings
      - name: Run integration tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: mise run test:bats
  ci-ubuntu:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      # Vaultwarden for Bitwarden provider tests
      vaultwarden:
        image: vaultwarden/server:latest
        ports:
          - 8080:80
        env:
          DOMAIN: http://localhost:8080
          SIGNUPS_ALLOWED: "true"
          DISABLE_ADMIN_TOKEN: "true"
          I_REALLY_WANT_VOLATILE_STORAGE: "true"
        options: >-
          --health-cmd "curl -f http://localhost || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # HashiCorp Vault for Vault provider tests
      vault:
        image: hashicorp/vault:latest
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: fnox-test-token
          VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
          VAULT_ADDR: http://127.0.0.1:8200
        options: >-
          --cap-add=IPC_LOCK
          --health-cmd "vault status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: jdx/mise-action@v3
      - uses: Swatinem/rust-cache@v2
      - name: Install Rust components
        run: rustup component add rustfmt clippy
      - name: Build
        run: cargo build
      - name: Setup age key for fnox
        run: mkdir -p ~/.config/fnox && echo "${{ secrets.AGE_SECRET }}" > ~/.config/fnox/age.txt
      - name: Redact secrets in CI output
        run: |
          fnox ci-redact
          # shellcheck disable=SC2016
          fnox run -- sh -c 'echo MY_UNIMPORTANT_SECRET: $MY_UNIMPORTANT_SECRET'
      - name: Run tests
        run: cargo test
      - name: Check formatting
        run: mise run lint
      - name: Run clippy
        run: cargo clippy -- -D warnings
      - name: Setup Bitwarden for tests
        run: |
          # Configure bw CLI for vaultwarden and create test account
          source ./test/setup-bitwarden-ci.sh
          # Export BW_SESSION to GITHUB_ENV so it's available in next steps
          echo "BW_SESSION=$BW_SESSION" >> "$GITHUB_ENV"
      - name: Setup Vault for tests
        run: |
          # Export Vault environment variables for tests
          echo "VAULT_ADDR=http://localhost:8200" >> "$GITHUB_ENV"
          echo "VAULT_TOKEN=fnox-test-token" >> "$GITHUB_ENV"
      - name: Run integration tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: mise run test:bats
  msrv:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: Swatinem/rust-cache@v2
      - uses: jdx/mise-action@v3
      - run: cargo msrv verify
